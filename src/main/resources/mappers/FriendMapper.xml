<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.ibreed_project.dao.IFriendDAO">

	<resultMap id="friendResultMap"
		type="com.ibreed_project.model.FriendVO">
		<result property="friend_id" column="friend_id" />
		<result property="request_id" column="request_id" />
		<result property="receiver_id" column="receiver_id" />
		<result property="requested_at" column="requested_at" />
		<result property="response_at" column="response_at" />
		<result property="request_status" column="request_status" />
	</resultMap>

	<!-- 친구목록 조회에 대한 resultMap 정의 -->
	<resultMap id="friendUserResultMap"
		type="com.ibreed_project.model.AccountVO">
		<result property="user_id" column="user_id" />
		<result property="user_name" column="user_name" />
		<result property="user_nickname" column="user_nickname" />
		<result property="user_gender" column="user_gender" />
		<result property="user_profile_image"
			column="user_profile_image" />
		<result property="user_rate" column="user_rate" />
		<result property="user_address" column="user_address" />
		<result property="user_birth" column="user_birth" />
	</resultMap>


	<!-- 친구목록 조회 -->
	<select id="getFriendList" resultMap="friendUserResultMap">
		SELECT
		u.user_id,
		u.user_name,
		u.user_nickname,
		u.user_gender,
		u.user_profile_image
		FROM
		friend f
		JOIN user u
		ON (f.requester_id
		= u.user_id AND f.receiver_id =
		#{user_id})
		OR (f.receiver_id =
		u.user_id AND f.requester_id =
		#{user_id})
		WHERE
		f.request_status =
		'accepted';
	</select>

	<!-- 친구 1명 정보 -->
	<select id="getFriendInfo" resultMap="friendUserResultMap">
		SELECT
		u.user_id,
		u.user_name,
		u.user_nickname,
		u.user_gender,
		u.user_profile_image,
		u.user_birth,
		u.user_rate,
		u.user_address
		FROM friend f
		JOIN user u
		ON
		(f.requester_id = u.user_id AND f.receiver_id = #{user_id})
		OR
		(f.receiver_id = u.user_id AND f.requester_id = #{user_id})
		WHERE
		f.request_status = 'accepted'
		AND (u.user_id = #{friend_id});
	</select>

	<!-- 친구 추가 -->
	<insert id="addFriend">
		INSERT INTO friend (requester_id, receiver_id,
		requested_at, request_status)
		VALUES (#{requester_id}, #{receiver_id},
		CURRENT_TIMESTAMP,
		'pending');
	</insert>


	<!-- 친구 삭제 -->

	<delete id="deleteFriend"  parameterType="string">
		DELETE FROM friend
		WHERE (requester_id = #{user_id} AND receiver_id = #{friend_id})
		OR (requester_id = #{friend_id} AND receiver_id = #{user_id});
	</delete>
</mapper>